#Conditional Hooks
$Application: FS2_Open
$On Game Init:
[
--Load up the options.tbl and tbms
RocketUiSystem.ModOptions = {}

function initModOptions()
	local utils = require('utils')

	if cf.fileExists('options.tbl') then
		utils.parseOptions('options.tbl')
	end

	for _, v in ipairs(cf.listFiles("data/tables", "*-optn.tbm")) do
		self:parseTable(v)
	end
end

initModOptions()

modOptionValues = {}

--Here we load the global mod options or the defaults for use before a player is selected
local saveFilename = 'mod_options_global.cfg'
if cf.fileExists(saveFilename, 'data/players', true) then
	local file = cf.openFile(saveFilename, 'r', 'data/players')
	local config = require('dkjson').decode(file:read('*a'))
	file:close()
	if not config then
		config = {}
	end
	
	modOptionValues = config
else
	modOptionValues = {}
	for i, v in ipairs(RocketUiSystem.ModOptions) do
		modOptionValues[v.Key] = v.Value
	end
	local json = require('dkjson')
	local file = cf.openFile(saveFilename, 'w', 'data/players')
	file:write(json.encode(modOptionValues))
	file:close()
end

]

$On State End:
[
if ((hv.OldState.Name == "GS_STATE_INITIAL_PLAYER_SELECT") and (hv.NewState.Name == "GS_STATE_MAIN_MENU")) or hv.OldState.Name == "GS_STATE_BARRACKS_MENU" then
	--Here we load the mod options save data for the selected player
	modOptionValues = {}
	local utils = require('utils')
	modOptionValues = utils.loadOptionsFromFile()
	
	--load defaults if we have bad data
	if type(modOptionValues) ~= "table" then
		ba.print("SCPUI: Got bad modOptionValues data! Loading defaults!")
		modOptionValues = {}
		for i, v in ipairs(RocketUiSystem.ModOptions) do
			modOptionValues[v.Key] = v.Value
		end
		utils.saveOptionsToFile(modOptionValues)
	end
end

]

#End